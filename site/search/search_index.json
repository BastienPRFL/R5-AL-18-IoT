{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"courses/index.html","text":"Pr\u00e9sentation du module L'Internet des objets ou IdO (en anglais (the) Internet of Things ou IoT) est l'interconnexion entre l'Internet et des objets, des lieux et des environnements physiques. L'appellation d\u00e9signe un nombre croissant d'objets connect\u00e9s \u00e0 Internet permettant ainsi une communication entre nos biens dits physiques et leurs existences num\u00e9riques. Ces formes de connexions permettent de rassembler de nouvelles masses de donn\u00e9es sur le r\u00e9seau et donc, de nouvelles connaissances et formes de savoirs. 1 L'objectif de ce parcours de formation est de vous apporter les connaissances et les comp\u00e9tences n\u00e9cessaires afin d'exercer le m\u00e9tier d'architecte et de d\u00e9veloppeur IoT. Comp\u00e9tences \u00e0 acqu\u00e9rir Voici les comp\u00e9tences qui vous allez acqu\u00e9rir dans le cadre de cette formation : Sp\u00e9cifications et conception Concevoir une architecture d'infrastructure IoT Choisir un protocole adapt\u00e9 Standardiser le format des donn\u00e9es D\u00e9veloppement R\u00e9cup\u00e9ration de flux de donn\u00e9es dans une page web Cr\u00e9ation d'un simulateur de flux en python D\u00e9veloppement d'une application IoT en javascript Mise en oeuvre Installation et configuration d'un broker MQTT Installation et configuration d'un serveur web Installation et configuration de services IoT (influxdb, grafana, nodered) Tests et validation Tester les limites de charge admissible par l'infrastructure D\u00e9terminer les actions \u00e0 mettre en place pour am\u00e9liorer la scalabilit\u00e9 D\u00e9marche cybers\u00e9curit\u00e9 Pr\u00e9-requis Il n'est pas n\u00e9cessaire d'avoir une exp\u00e9rience en \u00e9lectronique mais des connaissances de base en informatique et en r\u00e9seaux sont recommand\u00e9es. Modalit\u00e9s d'\u00e9valuation Vous devez rendre un compte-rendu de projet d\u00e9taillant votre sujet, votre d\u00e9marche de conception et de mise en oeuvre de la solution. Mots cl\u00e9s IoT - MQTT - LoRaWAN - Architecture Lambda - Objets connect\u00e9s Volume horaire Volume horaire d\u00e9fini : 18 heures soit 3 heures par semaine pendant 6 semaines R\u00e9f\u00e9rences Article wikipedia, Internet des Objets \u21a9 Internet des objets connect\u00e9s , Cours, exercices et cas pratiques, Thierry Alhalel, Adrien van den Bossche, Remi Boulle \u21a9","title":"Pr\u00e9sentation du module"},{"location":"courses/index.html#presentation-du-module","text":"L'Internet des objets ou IdO (en anglais (the) Internet of Things ou IoT) est l'interconnexion entre l'Internet et des objets, des lieux et des environnements physiques. L'appellation d\u00e9signe un nombre croissant d'objets connect\u00e9s \u00e0 Internet permettant ainsi une communication entre nos biens dits physiques et leurs existences num\u00e9riques. Ces formes de connexions permettent de rassembler de nouvelles masses de donn\u00e9es sur le r\u00e9seau et donc, de nouvelles connaissances et formes de savoirs. 1 L'objectif de ce parcours de formation est de vous apporter les connaissances et les comp\u00e9tences n\u00e9cessaires afin d'exercer le m\u00e9tier d'architecte et de d\u00e9veloppeur IoT.","title":"Pr\u00e9sentation du module"},{"location":"courses/index.html#competences-a-acquerir","text":"Voici les comp\u00e9tences qui vous allez acqu\u00e9rir dans le cadre de cette formation :","title":"Comp\u00e9tences \u00e0 acqu\u00e9rir"},{"location":"courses/index.html#specifications-et-conception","text":"Concevoir une architecture d'infrastructure IoT Choisir un protocole adapt\u00e9 Standardiser le format des donn\u00e9es","title":"Sp\u00e9cifications et conception"},{"location":"courses/index.html#developpement","text":"R\u00e9cup\u00e9ration de flux de donn\u00e9es dans une page web Cr\u00e9ation d'un simulateur de flux en python D\u00e9veloppement d'une application IoT en javascript","title":"D\u00e9veloppement"},{"location":"courses/index.html#mise-en-oeuvre","text":"Installation et configuration d'un broker MQTT Installation et configuration d'un serveur web Installation et configuration de services IoT (influxdb, grafana, nodered)","title":"Mise en oeuvre"},{"location":"courses/index.html#tests-et-validation","text":"Tester les limites de charge admissible par l'infrastructure D\u00e9terminer les actions \u00e0 mettre en place pour am\u00e9liorer la scalabilit\u00e9 D\u00e9marche cybers\u00e9curit\u00e9 Pr\u00e9-requis Il n'est pas n\u00e9cessaire d'avoir une exp\u00e9rience en \u00e9lectronique mais des connaissances de base en informatique et en r\u00e9seaux sont recommand\u00e9es.","title":"Tests et validation"},{"location":"courses/index.html#modalites-devaluation","text":"Vous devez rendre un compte-rendu de projet d\u00e9taillant votre sujet, votre d\u00e9marche de conception et de mise en oeuvre de la solution.","title":"Modalit\u00e9s d'\u00e9valuation"},{"location":"courses/index.html#mots-cles","text":"IoT - MQTT - LoRaWAN - Architecture Lambda - Objets connect\u00e9s","title":"Mots cl\u00e9s"},{"location":"courses/index.html#volume-horaire","text":"Volume horaire d\u00e9fini : 18 heures soit 3 heures par semaine pendant 6 semaines","title":"Volume horaire"},{"location":"courses/index.html#references","text":"Article wikipedia, Internet des Objets \u21a9 Internet des objets connect\u00e9s , Cours, exercices et cas pratiques, Thierry Alhalel, Adrien van den Bossche, Remi Boulle \u21a9","title":"R\u00e9f\u00e9rences"},{"location":"courses/TP1.html","text":"Architecture Pr\u00e9sentation de l'architecture Voici l'architecture que nous allons mettre en oeuvre dans le cadre de ce module. Une machine virtuelle sous Debian va vous \u00eatre attribu\u00e9 par groupe et disponible sur le r\u00e9seau local de la salle. 1 - Mosquitto Eclipse Mosquitto is an open source (EPL/EDL licensed) message broker that implements the MQTT protocol versions 5.0, 3.1.1 and 3.1. Mosquitto is lightweight and is suitable for use on all devices from low power single board computers to full servers. The MQTT protocol provides a lightweight method of carrying out messaging using a publish/subscribe model. This makes it suitable for Internet of Things messaging such as with low power sensors or mobile devices such as phones, embedded computers or microcontrollers. The Mosquitto project also provides a C library for implementing MQTT clients, and the very popular mosquitto_pub and mosquitto_sub command line MQTT clients. 2 - Script python de simulation Le script python de simulation doit permettre d'\u00e9muler une flotte de capteurs au format de votre application. A partir des donn\u00e9es de l'open data de Toulouse M\u00e9tropole, vous allez pouvoir simuler cette flotte de capteurs avec des m\u00e9tadonn\u00e9es r\u00e9alistes. 3 - Script python de traitement temps-r\u00e9el Le script de traitement temps-r\u00e9el doit permettre de r\u00e9aliser un traitement sur les donn\u00e9es \"\u00e0 la vol\u00e9e\". L'id\u00e9e est de faire un traitement math\u00e9matique sur un flux temps-r\u00e9el ou sur plusieurs flux temps-r\u00e9el. Par exemple, \u00e0 l'aide du polygon d'un quartier de Toulouse, vous pouvez calculer la moyenne par quartier et venir publier ce nouveau flux en MQTT. 4 - Serveur web nginx Le serveur web nginx va servir via le protocole HTTP le site web que nous allons d\u00e9velopper dans le cadre de votre application. 5 - Application web javascript Nous vous fournissons deux fichiers (HTML & JS) afin d'avoir un squelette de base. A vous de les am\u00e9liorer et de les faire \u00e9voluer en fonction de votre cas d'usage. 6 - Script python d'historisation Le script d'historisation doit s'abonner \u00e0 des flux temps-r\u00e9el et venir faire des insertions en base de donn\u00e9e Influxdb. 7 - Base de donn\u00e9e timeseries : Influxdb Nous allons stocker dans cette base de donn\u00e9e timeseries, les donn\u00e9es qui proviennent de flux temps r\u00e9el MQTT. 8 - Interface de visualisation : Grafana Grafana est une interface web qui permet de cr\u00e9er des tableaux de bord \u00e0 partir des donn\u00e9es de Influxdb. Libre \u00e0 vous de cr\u00e9er un tableau de bord pertinent en fonction de votre cas d'usage.","title":"Architecture"},{"location":"courses/TP1.html#architecture","text":"","title":"Architecture"},{"location":"courses/TP1.html#presentation-de-larchitecture","text":"Voici l'architecture que nous allons mettre en oeuvre dans le cadre de ce module. Une machine virtuelle sous Debian va vous \u00eatre attribu\u00e9 par groupe et disponible sur le r\u00e9seau local de la salle.","title":"Pr\u00e9sentation de l'architecture"},{"location":"courses/TP1.html#1-mosquitto","text":"Eclipse Mosquitto is an open source (EPL/EDL licensed) message broker that implements the MQTT protocol versions 5.0, 3.1.1 and 3.1. Mosquitto is lightweight and is suitable for use on all devices from low power single board computers to full servers. The MQTT protocol provides a lightweight method of carrying out messaging using a publish/subscribe model. This makes it suitable for Internet of Things messaging such as with low power sensors or mobile devices such as phones, embedded computers or microcontrollers. The Mosquitto project also provides a C library for implementing MQTT clients, and the very popular mosquitto_pub and mosquitto_sub command line MQTT clients.","title":"1 - Mosquitto"},{"location":"courses/TP1.html#2-script-python-de-simulation","text":"Le script python de simulation doit permettre d'\u00e9muler une flotte de capteurs au format de votre application. A partir des donn\u00e9es de l'open data de Toulouse M\u00e9tropole, vous allez pouvoir simuler cette flotte de capteurs avec des m\u00e9tadonn\u00e9es r\u00e9alistes.","title":"2 - Script python de simulation"},{"location":"courses/TP1.html#3-script-python-de-traitement-temps-reel","text":"Le script de traitement temps-r\u00e9el doit permettre de r\u00e9aliser un traitement sur les donn\u00e9es \"\u00e0 la vol\u00e9e\". L'id\u00e9e est de faire un traitement math\u00e9matique sur un flux temps-r\u00e9el ou sur plusieurs flux temps-r\u00e9el. Par exemple, \u00e0 l'aide du polygon d'un quartier de Toulouse, vous pouvez calculer la moyenne par quartier et venir publier ce nouveau flux en MQTT.","title":"3 - Script python de traitement temps-r\u00e9el"},{"location":"courses/TP1.html#4-serveur-web-nginx","text":"Le serveur web nginx va servir via le protocole HTTP le site web que nous allons d\u00e9velopper dans le cadre de votre application.","title":"4 - Serveur web nginx"},{"location":"courses/TP1.html#5-application-web-javascript","text":"Nous vous fournissons deux fichiers (HTML & JS) afin d'avoir un squelette de base. A vous de les am\u00e9liorer et de les faire \u00e9voluer en fonction de votre cas d'usage.","title":"5 - Application web javascript"},{"location":"courses/TP1.html#6-script-python-dhistorisation","text":"Le script d'historisation doit s'abonner \u00e0 des flux temps-r\u00e9el et venir faire des insertions en base de donn\u00e9e Influxdb.","title":"6 - Script python d'historisation"},{"location":"courses/TP1.html#7-base-de-donnee-timeseries-influxdb","text":"Nous allons stocker dans cette base de donn\u00e9e timeseries, les donn\u00e9es qui proviennent de flux temps r\u00e9el MQTT.","title":"7 - Base de donn\u00e9e timeseries : Influxdb"},{"location":"courses/TP1.html#8-interface-de-visualisation-grafana","text":"Grafana est une interface web qui permet de cr\u00e9er des tableaux de bord \u00e0 partir des donn\u00e9es de Influxdb. Libre \u00e0 vous de cr\u00e9er un tableau de bord pertinent en fonction de votre cas d'usage.","title":"8 - Interface de visualisation : Grafana"},{"location":"courses/TP2.html","text":"Collecte Objectifs Les objectifs ce TP est de mettre en oeuvre l'architecture de collecte des donn\u00e9es. Installation d'un broker MQTT Configuration du broker afin d'activer les websockets D\u00e9veloppement d'un script python de simulation Installation de Mosquitto sudo apt-get install mosquitto mosquitto-clients Utilisation de la ligne de commande afin de valider Utilisez les commandes mosquitto_pub et mosquitto_sub afin de valider la bonne configuration du logiciel. Par exemple, dans votre terminal : mosquitto_sub -v -t \"#\" -h IP_VM Dans un autre terminal : mosquitto_pub -t \"test\" -m \"hello\" -h IP_VM Attention Remplacez bien IP_VM par l'adresse IP de votre machine virtuelle ! Astuce Le projet mosquitto met \u00e0 votre disposition un service de test : test.mosquitto.org Activation des websockets Prenez connaissance des documentation de Mosquitto : Documentation du d\u00e9mon Documentation de la configuration Utilisez ces documentation afin d'obtenir les fonctionnalit\u00e9s suivantes : Activation d'un listener MQTT sur tcp sans TLS sur le port 1883 Activation d'un listener MQTT sur websocket sans TLS sur le port 9001 Ajoutez les lignes suivantes dans le fichier de configuration /etc/mosquitto/conf.d/mosquitto.conf : listener 1883 listener 9001 protocol websockets allow_anonymous true Red\u00e9marrage de mosquitto afin d'appliquer la configuration : systemctl restart mosquitto D\u00e9veloppement d'un script python de simulation A l'aide de la librairie paho-mqtt , d\u00e9veloppez un script python de simulation de l'objet connect\u00e9 de votre application. apt-get install python3-paho-mqtt Modifiez le script d'exemple afin de cr\u00e9er le squelette de base des trois scripts python que vous allez devoir cr\u00e9er : import paho.mqtt.client as mqtt # The callback for when the client receives a CONNACK response from the server. def on_connect ( client , userdata , flags , rc ): print ( \"Connected with result code \" + str ( rc )) # Subscribing in on_connect() means that if we lose the connection and # reconnect then subscriptions will be renewed. client . subscribe ( \"$SYS/#\" ) # The callback for when a PUBLISH message is received from the server. def on_message ( client , userdata , msg ): print ( msg . topic + \" \" + str ( msg . payload )) client = mqtt . Client () client . on_connect = on_connect client . on_message = on_message client . connect ( \"mqtt.eclipseprojects.io\" , 1883 , 60 ) # Blocking call that processes network traffic, dispatches callbacks and # handles reconnecting. # Other loop*() functions are available that give a threaded interface and a # manual interface. client . loop_forever ()","title":"Collecte"},{"location":"courses/TP2.html#collecte","text":"","title":"Collecte"},{"location":"courses/TP2.html#objectifs","text":"Les objectifs ce TP est de mettre en oeuvre l'architecture de collecte des donn\u00e9es. Installation d'un broker MQTT Configuration du broker afin d'activer les websockets D\u00e9veloppement d'un script python de simulation","title":"Objectifs"},{"location":"courses/TP2.html#installation-de-mosquitto","text":"sudo apt-get install mosquitto mosquitto-clients","title":"Installation de Mosquitto"},{"location":"courses/TP2.html#utilisation-de-la-ligne-de-commande-afin-de-valider","text":"Utilisez les commandes mosquitto_pub et mosquitto_sub afin de valider la bonne configuration du logiciel. Par exemple, dans votre terminal : mosquitto_sub -v -t \"#\" -h IP_VM Dans un autre terminal : mosquitto_pub -t \"test\" -m \"hello\" -h IP_VM Attention Remplacez bien IP_VM par l'adresse IP de votre machine virtuelle ! Astuce Le projet mosquitto met \u00e0 votre disposition un service de test : test.mosquitto.org","title":"Utilisation de la ligne de commande afin de valider"},{"location":"courses/TP2.html#activation-des-websockets","text":"Prenez connaissance des documentation de Mosquitto : Documentation du d\u00e9mon Documentation de la configuration Utilisez ces documentation afin d'obtenir les fonctionnalit\u00e9s suivantes : Activation d'un listener MQTT sur tcp sans TLS sur le port 1883 Activation d'un listener MQTT sur websocket sans TLS sur le port 9001 Ajoutez les lignes suivantes dans le fichier de configuration /etc/mosquitto/conf.d/mosquitto.conf : listener 1883 listener 9001 protocol websockets allow_anonymous true Red\u00e9marrage de mosquitto afin d'appliquer la configuration : systemctl restart mosquitto","title":"Activation des websockets"},{"location":"courses/TP2.html#developpement-dun-script-python-de-simulation","text":"A l'aide de la librairie paho-mqtt , d\u00e9veloppez un script python de simulation de l'objet connect\u00e9 de votre application. apt-get install python3-paho-mqtt Modifiez le script d'exemple afin de cr\u00e9er le squelette de base des trois scripts python que vous allez devoir cr\u00e9er : import paho.mqtt.client as mqtt # The callback for when the client receives a CONNACK response from the server. def on_connect ( client , userdata , flags , rc ): print ( \"Connected with result code \" + str ( rc )) # Subscribing in on_connect() means that if we lose the connection and # reconnect then subscriptions will be renewed. client . subscribe ( \"$SYS/#\" ) # The callback for when a PUBLISH message is received from the server. def on_message ( client , userdata , msg ): print ( msg . topic + \" \" + str ( msg . payload )) client = mqtt . Client () client . on_connect = on_connect client . on_message = on_message client . connect ( \"mqtt.eclipseprojects.io\" , 1883 , 60 ) # Blocking call that processes network traffic, dispatches callbacks and # handles reconnecting. # Other loop*() functions are available that give a threaded interface and a # manual interface. client . loop_forever ()","title":"D\u00e9veloppement d'un script python de simulation"},{"location":"courses/TP3.html","text":"Traitement Script de traitement temps-r\u00e9el Modifiez le script d'exemple ou reparter du squelette de script que vous avez cr\u00e9\u00e9 afin de r\u00e9aliser le traitement temps-r\u00e9el : import paho.mqtt.client as mqtt # The callback for when the client receives a CONNACK response from the server. def on_connect ( client , userdata , flags , rc ): print ( \"Connected with result code \" + str ( rc )) # Subscribing in on_connect() means that if we lose the connection and # reconnect then subscriptions will be renewed. client . subscribe ( \"$SYS/#\" ) # The callback for when a PUBLISH message is received from the server. def on_message ( client , userdata , msg ): print ( msg . topic + \" \" + str ( msg . payload )) client = mqtt . Client () client . on_connect = on_connect client . on_message = on_message client . connect ( \"mqtt.eclipseprojects.io\" , 1883 , 60 ) # Blocking call that processes network traffic, dispatches callbacks and # handles reconnecting. # Other loop*() functions are available that give a threaded interface and a # manual interface. client . loop_forever () Geofencing Si vous voulez r\u00e9aliser une moyenne par quartier, vous allez devoir faire du geofencing, c'est \u00e0 dire savoir si un point est inclus dans un polygon. Afin de r\u00e9aliser cette fonction, vous pouvez vous aider de la librairie g\u00e9om\u00e9trique Shapely : from shapely.geometry import Polygon , Point hyde_park_coordinates = [ ( 51.509764 , - 0.189529 ), ( 51.512819 , - 0.159570 ), ( 51.504451 , - 0.152143 ), ( 51.502639 , - 0.187329 ), ( 51.509764 , - 0.189529 ), ] hyde_park = Polygon ( hyde_park_coordinates ) someone_inside = Point ( 51.505278 , - 0.159479 ) someone_outside = Point ( 51.496443 , - 0.176218 ) hyde_park . contains ( someone_inside ) # returns True hyde_park . contains ( someone_outside ) # returns False Node-RED Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways. It provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click. Vous pouvez utiliser le logiciel Node-RED en compl\u00e9ment de votre script python afin de r\u00e9aliser d'autres traitements.","title":"Traitement"},{"location":"courses/TP3.html#traitement","text":"","title":"Traitement"},{"location":"courses/TP3.html#script-de-traitement-temps-reel","text":"Modifiez le script d'exemple ou reparter du squelette de script que vous avez cr\u00e9\u00e9 afin de r\u00e9aliser le traitement temps-r\u00e9el : import paho.mqtt.client as mqtt # The callback for when the client receives a CONNACK response from the server. def on_connect ( client , userdata , flags , rc ): print ( \"Connected with result code \" + str ( rc )) # Subscribing in on_connect() means that if we lose the connection and # reconnect then subscriptions will be renewed. client . subscribe ( \"$SYS/#\" ) # The callback for when a PUBLISH message is received from the server. def on_message ( client , userdata , msg ): print ( msg . topic + \" \" + str ( msg . payload )) client = mqtt . Client () client . on_connect = on_connect client . on_message = on_message client . connect ( \"mqtt.eclipseprojects.io\" , 1883 , 60 ) # Blocking call that processes network traffic, dispatches callbacks and # handles reconnecting. # Other loop*() functions are available that give a threaded interface and a # manual interface. client . loop_forever ()","title":"Script de traitement temps-r\u00e9el"},{"location":"courses/TP3.html#geofencing","text":"Si vous voulez r\u00e9aliser une moyenne par quartier, vous allez devoir faire du geofencing, c'est \u00e0 dire savoir si un point est inclus dans un polygon. Afin de r\u00e9aliser cette fonction, vous pouvez vous aider de la librairie g\u00e9om\u00e9trique Shapely : from shapely.geometry import Polygon , Point hyde_park_coordinates = [ ( 51.509764 , - 0.189529 ), ( 51.512819 , - 0.159570 ), ( 51.504451 , - 0.152143 ), ( 51.502639 , - 0.187329 ), ( 51.509764 , - 0.189529 ), ] hyde_park = Polygon ( hyde_park_coordinates ) someone_inside = Point ( 51.505278 , - 0.159479 ) someone_outside = Point ( 51.496443 , - 0.176218 ) hyde_park . contains ( someone_inside ) # returns True hyde_park . contains ( someone_outside ) # returns False","title":"Geofencing"},{"location":"courses/TP3.html#node-red","text":"Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways. It provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click. Vous pouvez utiliser le logiciel Node-RED en compl\u00e9ment de votre script python afin de r\u00e9aliser d'autres traitements.","title":"Node-RED"},{"location":"courses/TP4.html","text":"Stockage Installation d'Influxdb Lisez la documentation et r\u00e9alisez l'installation de Influxdb : https://docs.influxdata.com/influxdb/v2.7/get-started/ Script d'historisation En vous aidant du lien ci-dessous, repartez du squelette de script python afin d'enregistrer les donn\u00e9es des flux MQTT dans la base de donn\u00e9es Influxdb : https://www.influxdata.com/blog/getting-started-with-python-and-influxdb-v2-0/","title":"Stockage"},{"location":"courses/TP4.html#stockage","text":"","title":"Stockage"},{"location":"courses/TP4.html#installation-dinfluxdb","text":"Lisez la documentation et r\u00e9alisez l'installation de Influxdb : https://docs.influxdata.com/influxdb/v2.7/get-started/","title":"Installation d'Influxdb"},{"location":"courses/TP4.html#script-dhistorisation","text":"En vous aidant du lien ci-dessous, repartez du squelette de script python afin d'enregistrer les donn\u00e9es des flux MQTT dans la base de donn\u00e9es Influxdb : https://www.influxdata.com/blog/getting-started-with-python-and-influxdb-v2-0/","title":"Script d'historisation"},{"location":"courses/TP5.html","text":"Visualisation Installation A l'aide du lien suivant, r\u00e9alisez l'installation de Grafana : https://grafana.com/docs/grafana/latest/setup-grafana/installation/debian/ Ajout d'une source de donn\u00e9e Cr\u00e9ation d'un tableau de bord","title":"Visualisation"},{"location":"courses/TP5.html#visualisation","text":"","title":"Visualisation"},{"location":"courses/TP5.html#installation","text":"A l'aide du lien suivant, r\u00e9alisez l'installation de Grafana : https://grafana.com/docs/grafana/latest/setup-grafana/installation/debian/","title":"Installation"},{"location":"courses/TP5.html#ajout-dune-source-de-donnee","text":"","title":"Ajout d'une source de donn\u00e9e"},{"location":"courses/TP5.html#creation-dun-tableau-de-bord","text":"","title":"Cr\u00e9ation d'un tableau de bord"},{"location":"courses/TP6.html","text":"Application Configuration du serveur web R\u00e9alisez l'installation de nginx : apt-get install nginx Copiez les fichiers index.html et mqtt_wrapper.js dans le dossier /var/www/html de votre machine virtuelle. Ouvrez votre navigateur afin d'afficher la page web. Validation de la connexion MQTT via websocket A l'aide de la m\u00e9thode console.log() en javascript, afficher les messages re\u00e7us via MQTT dans la console de d\u00e9veloppeur de votre navigateur. Prise en main de la librairie leaflet Leaflet is the leading open-source JavaScript library for mobile-friendly interactive maps. Weighing just about 42 KB of JS, it has all the mapping features most developers ever need. Leaflet is designed with simplicity, performance and usability in mind. It works efficiently across all major desktop and mobile platforms, can be extended with lots of plugins, has a beautiful, easy to use and well-documented API and a simple, readable source code that is a joy to contribute to. Parcourez la documentation de la librairie de Leaflet afin de trouver les fonctions n\u00e9cessaires \u00e0 votre application.","title":"Application"},{"location":"courses/TP6.html#application","text":"","title":"Application"},{"location":"courses/TP6.html#configuration-du-serveur-web","text":"R\u00e9alisez l'installation de nginx : apt-get install nginx Copiez les fichiers index.html et mqtt_wrapper.js dans le dossier /var/www/html de votre machine virtuelle. Ouvrez votre navigateur afin d'afficher la page web.","title":"Configuration du serveur web"},{"location":"courses/TP6.html#validation-de-la-connexion-mqtt-via-websocket","text":"A l'aide de la m\u00e9thode console.log() en javascript, afficher les messages re\u00e7us via MQTT dans la console de d\u00e9veloppeur de votre navigateur.","title":"Validation de la connexion MQTT via websocket"},{"location":"courses/TP6.html#prise-en-main-de-la-librairie-leaflet","text":"Leaflet is the leading open-source JavaScript library for mobile-friendly interactive maps. Weighing just about 42 KB of JS, it has all the mapping features most developers ever need. Leaflet is designed with simplicity, performance and usability in mind. It works efficiently across all major desktop and mobile platforms, can be extended with lots of plugins, has a beautiful, easy to use and well-documented API and a simple, readable source code that is a joy to contribute to. Parcourez la documentation de la librairie de Leaflet afin de trouver les fonctions n\u00e9cessaires \u00e0 votre application.","title":"Prise en main de la librairie leaflet"},{"location":"courses/projet.html","text":"Cas d'usage Le module est organis\u00e9 sous la forme d'un projet \u00e0 r\u00e9aliser par groupe de 5 \u00e9tudiants. Smart City Chaque groupe doit choisir un projet en lien avec la strat\u00e9gie Smart City de Toulouse M\u00e9tropole. Votre objectif est d'imaginer une id\u00e9e de projet IoT que la collectivit\u00e9 pourrait mettre en oeuvre afin d'am\u00e9liorer le quotidien de ses citoyens et des \u00e9quipes techniques de la m\u00e9tropole. R\u00e9cup\u00e9ration de donn\u00e9es ouvertes Afin de trouver des id\u00e9es et des donn\u00e9es r\u00e9elles \u00e0 exploiter, vous allez pouvoir vous rendre sur le site de l'open data de Toulouse M\u00e9tropole. Les jeux de donn\u00e9es que vous allez pouvoir r\u00e9cup\u00e9rer vont nous permettre de simuler l'environnement de Toulouse. Site de l'open data de Toulouse M\u00e9tropole D\u00e9marche projet Un projet IoT met en oeuvre des comp\u00e9tences tr\u00e8s diverses, de l'\u00e9lectronique jusqu'au d\u00e9veloppement web en passant par les r\u00e9seaux et les infrastructures. Dans le cadre de ce projet, nous allons mettre de c\u00f4t\u00e9 la conception et la r\u00e9alisation d'objets connect\u00e9s et nous concentrer sur la partie protocoles de haut-niveau, infrastructure et application web. Vous allez tout de m\u00eame devoir d\u00e9finir \u00e0 quoi peut ressembler le ou les objets connect\u00e9s qui vont \u00eatre mis en oeuvre par l'\u00e9quipe virtuel d'\u00e9lectroniciens. Vous allez \u00e9galement devoir vous entendre en d\u00e9but de projet pour d\u00e9finir le format des donn\u00e9es qui vont \u00eatre transmise en flux \u00e0 l'entr\u00e9e de votre plateforme. De cette fa\u00e7on chaque \u00e9quipe va pouvoir avancer dans la conception de sa partie en simulant l'autre partie et vous allez pouvoir vous retrouver en phase d'int\u00e9gration et tout devrait fonctionner du premier coup. Travail par groupe Mettez-vous par groupe afin de r\u00e9flechir \u00e0 un sujet, trouver les jeux de donn\u00e9es associ\u00e9s, d\u00e9finir \u00e0 quoi vont ressembler les objets connect\u00e9s dans votre application, le protocole et le format des messages qu'ils vont transmettre.","title":"Cas d'usage"},{"location":"courses/projet.html#cas-dusage","text":"Le module est organis\u00e9 sous la forme d'un projet \u00e0 r\u00e9aliser par groupe de 5 \u00e9tudiants.","title":"Cas d'usage"},{"location":"courses/projet.html#smart-city","text":"Chaque groupe doit choisir un projet en lien avec la strat\u00e9gie Smart City de Toulouse M\u00e9tropole. Votre objectif est d'imaginer une id\u00e9e de projet IoT que la collectivit\u00e9 pourrait mettre en oeuvre afin d'am\u00e9liorer le quotidien de ses citoyens et des \u00e9quipes techniques de la m\u00e9tropole.","title":"Smart City"},{"location":"courses/projet.html#recuperation-de-donnees-ouvertes","text":"Afin de trouver des id\u00e9es et des donn\u00e9es r\u00e9elles \u00e0 exploiter, vous allez pouvoir vous rendre sur le site de l'open data de Toulouse M\u00e9tropole. Les jeux de donn\u00e9es que vous allez pouvoir r\u00e9cup\u00e9rer vont nous permettre de simuler l'environnement de Toulouse. Site de l'open data de Toulouse M\u00e9tropole","title":"R\u00e9cup\u00e9ration de donn\u00e9es ouvertes"},{"location":"courses/projet.html#demarche-projet","text":"Un projet IoT met en oeuvre des comp\u00e9tences tr\u00e8s diverses, de l'\u00e9lectronique jusqu'au d\u00e9veloppement web en passant par les r\u00e9seaux et les infrastructures. Dans le cadre de ce projet, nous allons mettre de c\u00f4t\u00e9 la conception et la r\u00e9alisation d'objets connect\u00e9s et nous concentrer sur la partie protocoles de haut-niveau, infrastructure et application web. Vous allez tout de m\u00eame devoir d\u00e9finir \u00e0 quoi peut ressembler le ou les objets connect\u00e9s qui vont \u00eatre mis en oeuvre par l'\u00e9quipe virtuel d'\u00e9lectroniciens. Vous allez \u00e9galement devoir vous entendre en d\u00e9but de projet pour d\u00e9finir le format des donn\u00e9es qui vont \u00eatre transmise en flux \u00e0 l'entr\u00e9e de votre plateforme. De cette fa\u00e7on chaque \u00e9quipe va pouvoir avancer dans la conception de sa partie en simulant l'autre partie et vous allez pouvoir vous retrouver en phase d'int\u00e9gration et tout devrait fonctionner du premier coup. Travail par groupe Mettez-vous par groupe afin de r\u00e9flechir \u00e0 un sujet, trouver les jeux de donn\u00e9es associ\u00e9s, d\u00e9finir \u00e0 quoi vont ressembler les objets connect\u00e9s dans votre application, le protocole et le format des messages qu'ils vont transmettre.","title":"D\u00e9marche projet"}]}